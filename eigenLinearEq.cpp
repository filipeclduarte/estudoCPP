#include <iostream>
#include <eigen3/Eigen/Dense>

using namespace Eigen;

int main(){

    // Finding the least squares solution of Ax = b
    // MatrixXf A = MatrixXf::Random(10, 5);
    // MatrixXf A(10, 3);
    // A << 1, 0.4, 3,
    //      4, 0.1, 6,
    //      3, 0.11, 4.5, 
    //      3, 0.09, 5.5,
    //      4, 0.11, 5.99,
    //      5, 0.12, 4.09,
    //      2, 0.44, 3.11,
    //      2, 0.32, 4.21,
    //      5, 0.55, 7.01,
    //      3, 0.093, 4.01;
    MatrixXf A(20, 11);
    A << 7.4,0.7,0,1.9,0.076,11,34,0.9978,3.51,0.56,9.4,
        7.8,0.88,0,2.6,0.098,25,67,0.9968,3.2,0.68,9.8,
        7.8,0.76,0.04,2.3,0.092,15,54,0.997,3.26,0.65,9.8,
        11.2,0.28,0.56,1.9,0.075,17,60,0.998,3.16,0.58,9.8,
        7.4,0.7,0,1.9,0.076,11,34,0.9978,3.51,0.56,9.4,
        7.4,0.66,0,1.8,0.075,13,40,0.9978,3.51,0.56,9.4,
        7.9,0.6,0.06,1.6,0.069,15,59,0.9964,3.3,0.46,9.4,
        7.3,0.65,0,1.2,0.065,15,21,0.9946,3.39,0.47,10,
        7.8,0.58,0.02,2,0.073,9,18,0.9968,3.36,0.57,9.5,
        7.5,0.5,0.36,6.1,0.071,17,102,0.9978,3.35,0.8,10.5,
        6.7,0.58,0.08,1.8,0.097,15,65,0.9959,3.28,0.54,9.2,
        7.5,0.5,0.36,6.1,0.071,17,102,0.9978,3.35,0.8,10.5,
        5.6,0.615,0,1.6,0.089,16,59,0.9943,3.58,0.52,9.9,
        7.8,0.61,0.29,1.6,0.114,9,29,0.9974,3.26,1.56,9.1,
        8.9,0.62,0.18,3.8,0.176,52,145,0.9986,3.16,0.88,9.2,
        8.9,0.62,0.19,3.9,0.17,51,148,0.9986,3.17,0.93,9.2,
        8.5,0.28,0.56,1.8,0.092,35,103,0.9969,3.3,0.75,10.5,
        8.1,0.56,0.28,1.7,0.368,16,56,0.9968,3.11,1.28,9.3,
        7.4,0.59,0.08,4.4,0.086,6,29,0.9974,3.38,0.5,9,
        7.9,0.32,0.51,1.8,0.341,17,56,0.9969,3.04,1.08,9.2;


    MatrixXf ones = MatrixXf::Ones(20, 1);
    MatrixXf A1(ones.rows(), ones.cols() + A.cols()); // concatenar ones e A
    A1 << ones,
          A;

    // VectorXf b = VectorXf::Random(10);
    VectorXf b(20);
    // b << 1,
    //      2,
    //      2.01,
    //      1.99,
    //      0.7,
    //      3.001,
    //      4.3,
    //      1.7,
    //      2.31,
    //      1.99;

    b << 5,
         5, 
         5, 
         6,
         5,
         5,
         5,
         7,
         7,
         5,
         5,
         5,
         5,
         5,
         5,
         5,
         7,
         5,
         4,
         6;

    std::cout << "A solução usando normal equations is:\n" 
    << (A1.transpose() * A1).ldlt().solve(A1.transpose() * b) << std::endl;


    return 0;


}